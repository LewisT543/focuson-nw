type Query{
  getCreatePlanDD(accountId: String!, createPlanId: String!, customerId: String!):CreatePlanDD!
  listCreatePlanDD(accountId: String!, createPlanId: String!, customerId: String!):[CreatePlanDD!]!
  getEAccountsSummaryDD(accountId: String!, customerId: String!):EAccountsSummaryDD!
}
type Mutation{
  createCreatePlanDD(accountId: String!, createPlanId: String!, customerId: String!):CreatePlanDD!
  updateCreatePlanDD(accountId: String!, createPlanId: String!, customerId: String!):CreatePlanDD!
  deleteCreatePlanDD(accountId: String!, createPlanId: String!, customerId: String!):String
}
type CreatePlanDD{
  createPlanStart: String!
  createPlanDate: String!
  createPlanEnd: String!
}
type EAccountsSummaryDD{
  eAccountsTable: [EAccountSummaryDD!]!
  totalMonthlyCost: String!
  oneAccountBalance: String!
  currentAccountBalance: String!
  createPlan: CreatePlanDD!
}
type EAccountSummaryDD{
  accountId: String!
  displayType: String!
  description: String!
  virtualBankSeq: String!
  total: String!
  frequency: String!
}
input CreatePlanDDInp{
  createPlanStart: String!
  createPlanDate: String!
  createPlanEnd: String!
}
input CreatePlanDDIdAndInp{
  createPlanStart: String!
  createPlanDate: String!
  createPlanEnd: String!
}