type Query{
  getOccupationAndIncomeDetails(accountSeq: String!, applicationRef: String!, brandRef: String!, vbAccountSeq: String!, vbAccountType: String!):OccupationAndIncomeDetails!
  getOtherIncomeResponse(accountSeq: String!, applicationRef: String!, brandRef: String!, vbAccountSeq: String!, vbAccountType: String!):OtherIncomeResponse!
  getCreatePlan(accountId: String!, createPlanId: String!, customerId: String!):CreatePlan!
  listCreatePlan(accountId: String!, customerId: String!):[CreatePlan!]!
  getEAccountsSummary(accountId: String!, customerId: String!):EAccountsSummary!
  getCreateEAccountData(accountId: String!, createPlanId: String!, customerId: String!):CreateEAccountData!
  getChequeCreditbooks(accountId: String!, applRef: String!, brandRef: String!, customerId: String!):ChequeCreditbooks!
  getRepeatingLine(customerId: String!):[RepeatingLine!]!
  getPostCodeDataLine(postcode: String!):[PostCodeDataLine!]!
}
type Mutation{
  updateOccupationAndIncomeDetails(accountSeq: String!, applicationRef: String!, brandRef: String!, vbAccountSeq: String!, vbAccountType: String!,obj: OccupationAndIncomeDetailsInp!):OccupationAndIncomeDetails!
  createCreatePlan(accountId: String!, customerId: String!,obj: CreatePlanInp!):CreatePlan!
  updateCreatePlan(accountId: String!, createPlanId: String!, customerId: String!,obj: CreatePlanInp!):CreatePlan!
  deleteCreatePlan(accountId: String!, createPlanId: String!, customerId: String!):String
  createETransferDataD(customerId: String!,obj: ETransferDataDInp!):ETransferDataD!
  createCreateEAccountData(accountId: String!, customerId: String!,obj: CreateEAccountDataInp!):CreateEAccountData!
  createChequeCreditbooks(accountId: String!, applRef: String!, brandRef: String!, customerId: String!,obj: ChequeCreditbooksInp!):ChequeCreditbooks!
  createRepeatingLine(customerId: String!,obj: [RepeatingLineInp!]!):[RepeatingLine!]!
  createPostCodeMainPage(,obj: PostCodeMainPageInp!):PostCodeMainPage!
}
type ChequeCreditbooks{
  history: [ChequeCreditbooksHistoryLine!]!
}
type ChequeCreditbooksHistoryLine{
  serialNumber: Int!
  howOrdered: String!
  dateOrder: String!
}
type CreateEAccountData{
  name: String!
  type: String!
  savingsStyle: String!
  initialAmount: Int!
}
type CreatePlan{
  createPlanStart: String!
  createPlanDate: String!
  createPlanEnd: String!
}
type EAccountsSummary{
  useEStatements: Boolean!
  eAccountsTable: [EAccountSummary!]!
  totalMonthlyCost: Int!
  oneAccountBalance: Int!
  currentAccountBalance: Int!
  createPlan: CreatePlan!
}
type EAccountSummary{
  accountId: Int!
  displayType: String!
  description: String!
  virtualBankSeq: String!
  total: Int!
  frequency: String!
}
type ETransferDataD{
  account: Int!
  dateOfETransfer: String!
  description: String!
  fromAccount: Int!
  toAccount: Int!
  monitoringAccount: Int!
  type: String!
  balance: Int!
  notes: String!
}
type OccupationAndIncomeDetails{
  regulatoryReport: String!
  mainCustomerName: String!
  jointCustomerName: String!
  mainClientRef: Int!
  jointClientRef: Int!
  customerOccupationIncomeDetails: [OccupationIncomeDetails!]!
}
type OccupationIncomeDetails{
  areYou: String!
  currentEmployment: String!
  occupation: String!
  customerDescription: String!
  ownShareOfTheCompany: String!
  owningSharesPct: String!
  workFor: String!
  employmentType: String!
  annualSalaryBeforeDeduction: Int!
  annualIncomeExcludingRent: Int!
  regularCommissionBonus: Int!
  dateOfEmploymentStart: String!
  otherSourceOfIncome: String!
  createdBy: String!
  createdDate: String!
  employerName: String!
  whatTypeOfBusiness: String!
  whatNameBusiness: String!
  establishedYear: String!
  annualDrawing3Yrs: Int!
  empStartDate: String!
  empEndDate: String!
  sePositionHeld: String!
  occupationCategory: String!
  empEmploymentSeq: Int!
  empAppRoleSeq: Int!
  accountantAppRoleSeq: Int!
}
type OtherIncomeResponse{
  clientOtherIncomeSeq: String!
  otherIncomeType: String!
  incomeFreqRef: String!
  amount: Int!
}
type PostCodeDataLine{
  line1: String!
  line2: String!
  line3: String!
  line4: String!
}
type PostCodeMainPage{
  name: String!
  line1: String!
  line2: String!
  line3: String!
  line4: String!
  postcode: String!
}
type RepeatingLine{
  name: String!
  age: Int!
}
input ChequeCreditbooksInp{
  history: [ChequeCreditbooksHistoryLineInp!]!
}
input ChequeCreditbooksHistoryLineInp{
  serialNumber: Int!
  howOrdered: String!
  dateOrder: String!
}
input CreateEAccountDataInp{
  name: String!
  type: String!
  savingsStyle: String!
  initialAmount: Int!
}
input CreatePlanInp{
  createPlanStart: String!
  createPlanDate: String!
  createPlanEnd: String!
}
input ETransferDataDInp{
  account: Int!
  dateOfETransfer: String!
  description: String!
  fromAccount: Int!
  toAccount: Int!
  monitoringAccount: Int!
  type: String!
  balance: Int!
  notes: String!
}
input OccupationAndIncomeDetailsInp{
  regulatoryReport: String!
  mainCustomerName: String!
  jointCustomerName: String!
  mainClientRef: Int!
  jointClientRef: Int!
  customerOccupationIncomeDetails: [OccupationIncomeDetailsInp!]!
}
input OccupationIncomeDetailsInp{
  areYou: String!
  currentEmployment: String!
  occupation: String!
  customerDescription: String!
  ownShareOfTheCompany: String!
  owningSharesPct: String!
  workFor: String!
  employmentType: String!
  annualSalaryBeforeDeduction: Int!
  annualIncomeExcludingRent: Int!
  regularCommissionBonus: Int!
  dateOfEmploymentStart: String!
  otherSourceOfIncome: String!
  createdBy: String!
  createdDate: String!
  employerName: String!
  whatTypeOfBusiness: String!
  whatNameBusiness: String!
  establishedYear: String!
  annualDrawing3Yrs: Int!
  empStartDate: String!
  empEndDate: String!
  sePositionHeld: String!
  occupationCategory: String!
  empEmploymentSeq: Int!
  empAppRoleSeq: Int!
  accountantAppRoleSeq: Int!
}
input PostCodeMainPageInp{
  name: String!
  line1: String!
  line2: String!
  line3: String!
  line4: String!
  postcode: String!
}
input RepeatingLineInp{
  name: String!
  age: Int!
}