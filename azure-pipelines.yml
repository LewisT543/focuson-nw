trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - script: |
       npm --version
       node --version
       tsc --version
       sudo npm install -g typescript
       tsc --version
              echo "debug"
       echo "pipeline/workspace $(Pipeline.Workspace)"
       echo "System.DefaultWorkingDirectory $(System.DefaultWorkingDirectory)"
       echo "pwd"       
       pwd
    displayName: 'install latest tsc'
    condition: succeededOrFailed()


  - script: |
      cd modules/lens
      npm install
      tsc
      npm test
    displayName: 'lens'
    condition: succeededOrFailed()

  - script: |
      cd modules/codeondemand
      npm install
      tsc
      npm test
    displayName: 'codeondemand'
    condition: succeededOrFailed()

  - script: |
      cd modules/nav
      npm install
      tsc
      npm test
    displayName: 'nav'
    condition: succeededOrFailed()

  - script: |
      cd modules/nonfunctionals
      npm install
      tsc
      npm test
    displayName: 'nonfunctionals'
    condition: succeededOrFailed()

  - script: |
      set -e
      cd examples/lens/dragon
      npm install
      tsc
      npm test
    displayName: 'lens/dragon'
    condition: succeededOrFailed()

  - script: |
      set -e
      cd examples/lens/counter
      npm install
      tsc
#      npm test
    displayName: 'lens/counter'
    condition: succeededOrFailed()

  - script: |
      set -e
      cd examples/lens/cpq
      npm install
      tsc
      npm test
    displayName: 'lens/cpq'
    condition: succeededOrFailed()

  - script: |
      set -e
      cd examples/lens/tictactoe
      npm install
      tsc
      npm test
    displayName: 'lens/tictactoe'
    condition: succeededOrFailed()

  - script: |
      set -e
      cd examples/codeondemand/tictactoe
      npm install
      tsc
      npm test
    displayName: 'codeondemand/tictactoe'
    condition: succeededOrFailed()

  - script: |
      set -e
      cd examples/codeondemand/cpq
      npm install
      tsc
      npm test
    displayName: 'codeondemand/cpq'
    condition: succeededOrFailed()

  - script: |
       chmod -R  u+x scripts
       scripts/installAll.sh log.txt
    displayName: 'summary'
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/log.txt'
      artifact: 'summary'
      publishLocation: 'pipeline'